# Name of your executable
EXE = test_blocks

# Here is the name of all object files corresponding to the source
# 		code that you wrote in order to define the problem statement
# OBJS = test_blocks.o buildingBlocks.o makeBuildingBlocks.o bookkeeper.o NLPInterface.o adaptiveNLP.o interfaceTester.o plotter.o
# OBJS = adaptiveCorridorExample.o buildingBlocks.o makeBuildingBlocks.o bookkeeper.o NLPInterface.o adaptiveNLP.o interfaceTester.o plotter.o adaptiveCorridorExampleHelpers.o
# OBJS = manyObstaclesExample.o buildingBlocks.o makeBuildingBlocks.o bookkeeper.o NLPInterface.o adaptiveNLP.o interfaceTester.o plotter.o manyObstaclesHelper.o
# OBJS = moonlanderExample.o buildingBlocks.o makeBuildingBlocks.o bookkeeper.o NLPInterface.o adaptiveNLP.o interfaceTester.o plotter.o errorEstimator.o moonlanderExampleHelper.o
OBJS = discontinuousPathConstraintExample.o buildingBlocks.o makeBuildingBlocks.o bookkeeper.o NLPInterface.o adaptiveNLP.o interfaceTester.o plotter.o errorEstimator.o

# Additional libraries
ADDLIBS = -lcasadi -lpython3.10

# Additional flags for compilation (e.g., include flags)
ADDINCFLAGS = -I /mnt/c/users/u0143705/Documents/PhD/matplotlib-cpp -I /usr/include/python3.10 -I /home/u0143705/.local/lib/python3.10/site-packages/numpy/core/include

##########################################################################

# C++ Compiler command
CXX = g++

# C++ Compiler options
# CXXFLAGS = -O2 -DNDEBUG
CXXFLAGS = -O2 -pg
# CXXFLAGS = -O2

# additional C++ Compiler options for linking
CXXLINKFLAGS =  -Wl,--rpath -Wl,/usr/local/lib

prefix=/usr/local
exec_prefix=${prefix}

# Include directories
INCL = `PKG_CONFIG_PATH=/usr/local/lib/pkgconfig: pkg-config --cflags ipopt` $(ADDINCFLAGS)
#INCL = -I${prefix}/include/coin -I/usr/local/include/coin-or/hsl   -DIPOPTLIB_BUILD $(ADDINCFLAGS)

# Linker flags
LIBS = `PKG_CONFIG_PATH=/usr/local/lib/pkgconfig: pkg-config --libs ipopt`
#LIBS = -L${exec_prefix}/lib -lipopt -L/usr/local/lib -lcoinhsl -llapack -lblas   -lm  -ldl

all: $(EXE)

.SUFFIXES: .cpp .o

$(EXE): $(OBJS)
	$(CXX) $(CXXLINKFLAGS) $(CXXFLAGS) -o $@ $(OBJS) $(ADDLIBS) $(LIBS)

clean:
	rm -rf $(EXE) $(OBJS) ipopt.out

.cpp.o:
	$(CXX) $(CXXFLAGS) $(INCL) -c -o $@ $<
